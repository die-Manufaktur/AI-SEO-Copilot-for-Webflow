name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 3.3.3)'
        required: true
        type: string
      release_notes:
        description: 'Custom release notes (optional - will use generated notes if empty)'
        required: false
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  manual-release:
    name: Create Manual Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build project
        run: pnpm build

      - name: Update version in files
        run: node scripts/update-versions.js ${{ github.event.inputs.version }}

      - name: Generate changelog entry
        id: changelog
        run: |
          # Generate changelog for this version
          npx conventional-changelog-cli -p conventionalcommits -r 1 > TEMP_CHANGELOG.md
          
          # If custom release notes provided, use them; otherwise use generated changelog
          if [ -n "${{ github.event.inputs.release_notes }}" ]; then
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
            echo "${{ github.event.inputs.release_notes }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
            cat TEMP_CHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit version updates
        run: |
          git add package.json webflow.json wrangler.toml CHANGELOG.md
          git commit -m "chore(release): ${{ github.event.inputs.version }} [skip ci]"
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin main --tags

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ github.event.inputs.version }}" \
            --title "Release v${{ github.event.inputs.version }}" \
            --notes "${{ steps.changelog.outputs.RELEASE_NOTES }}" \
            --draft \
            ${{ github.event.inputs.prerelease == 'true' && '--prerelease' || '' }} \
            bundle.zip

      - name: Summary
        run: |
          echo "## ðŸŽ‰ Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** v${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Draft (ready for your review)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to [Releases](https://github.com/${{ github.repository }}/releases)" >> $GITHUB_STEP_SUMMARY
          echo "2. Edit the draft release to customize the release notes" >> $GITHUB_STEP_SUMMARY
          echo "3. Publish the release when ready" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Files Updated:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… package.json" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… webflow.json" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… wrangler.toml" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Git tag created" >> $GITHUB_STEP_SUMMARY