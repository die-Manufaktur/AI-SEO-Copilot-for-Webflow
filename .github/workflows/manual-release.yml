name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 3.3.3)'
        required: true
        type: string
      release_notes:
        description: 'Custom release notes (optional)'
        required: false
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  manual-release:
    name: Create Manual Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Update version in files
        run: node scripts/update-versions.js ${{ github.event.inputs.version }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create git tag
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"
          
          # Create release
          RELEASE_NOTES="${{ github.event.inputs.release_notes }}"
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES="Release v${{ github.event.inputs.version }}"
          fi
          
          gh release create "v${{ github.event.inputs.version }}" \
            --title "Release v${{ github.event.inputs.version }}" \
            --notes "$RELEASE_NOTES" \
            --draft \
            ${{ github.event.inputs.prerelease == 'true' && '--prerelease' || '' }} \
            bundle.zip

      - name: Create Version Update Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add package.json webflow.json wrangler.toml
          git commit -m "chore(release): ${{ github.event.inputs.version }} [skip ci]"
          
          BRANCH_NAME="release/v${{ github.event.inputs.version }}"
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"
          
          echo "✅ Pushed version updates to branch: $BRANCH_NAME"
          echo "ℹ️ Auto-PR workflow will create the pull request"